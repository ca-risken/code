// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0-devel
// 	protoc        v3.12.1
// source: code/service.proto

package code

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ListDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodeDataSourceId uint32 `protobuf:"varint,1,opt,name=code_data_source_id,json=codeDataSourceId,proto3" json:"code_data_source_id,omitempty"`
	Name             string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ListDataSourceRequest) Reset() {
	*x = ListDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_code_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataSourceRequest) ProtoMessage() {}

func (x *ListDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_code_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataSourceRequest.ProtoReflect.Descriptor instead.
func (*ListDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_code_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListDataSourceRequest) GetCodeDataSourceId() uint32 {
	if x != nil {
		return x.CodeDataSourceId
	}
	return 0
}

func (x *ListDataSourceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodeDataSource []*CodeDataSource `protobuf:"bytes,1,rep,name=code_data_source,json=codeDataSource,proto3" json:"code_data_source,omitempty"`
}

func (x *ListDataSourceResponse) Reset() {
	*x = ListDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_code_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataSourceResponse) ProtoMessage() {}

func (x *ListDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_code_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataSourceResponse.ProtoReflect.Descriptor instead.
func (*ListDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_code_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListDataSourceResponse) GetCodeDataSource() []*CodeDataSource {
	if x != nil {
		return x.CodeDataSource
	}
	return nil
}

type ListGitleaksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId        uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	CodeDataSourceId uint32 `protobuf:"varint,2,opt,name=code_data_source_id,json=codeDataSourceId,proto3" json:"code_data_source_id,omitempty"`
	GitleaksId       uint32 `protobuf:"varint,3,opt,name=gitleaks_id,json=gitleaksId,proto3" json:"gitleaks_id,omitempty"`
}

func (x *ListGitleaksRequest) Reset() {
	*x = ListGitleaksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_code_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGitleaksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGitleaksRequest) ProtoMessage() {}

func (x *ListGitleaksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_code_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGitleaksRequest.ProtoReflect.Descriptor instead.
func (*ListGitleaksRequest) Descriptor() ([]byte, []int) {
	return file_code_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListGitleaksRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListGitleaksRequest) GetCodeDataSourceId() uint32 {
	if x != nil {
		return x.CodeDataSourceId
	}
	return 0
}

func (x *ListGitleaksRequest) GetGitleaksId() uint32 {
	if x != nil {
		return x.GitleaksId
	}
	return 0
}

type ListGitleaksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gitleaks []*Gitleaks `protobuf:"bytes,1,rep,name=gitleaks,proto3" json:"gitleaks,omitempty"`
}

func (x *ListGitleaksResponse) Reset() {
	*x = ListGitleaksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_code_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGitleaksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGitleaksResponse) ProtoMessage() {}

func (x *ListGitleaksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_code_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGitleaksResponse.ProtoReflect.Descriptor instead.
func (*ListGitleaksResponse) Descriptor() ([]byte, []int) {
	return file_code_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListGitleaksResponse) GetGitleaks() []*Gitleaks {
	if x != nil {
		return x.Gitleaks
	}
	return nil
}

type PutGitleaksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint32             `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Gitleaks  *GitleaksForUpsert `protobuf:"bytes,2,opt,name=gitleaks,proto3" json:"gitleaks,omitempty"`
}

func (x *PutGitleaksRequest) Reset() {
	*x = PutGitleaksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_code_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutGitleaksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutGitleaksRequest) ProtoMessage() {}

func (x *PutGitleaksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_code_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutGitleaksRequest.ProtoReflect.Descriptor instead.
func (*PutGitleaksRequest) Descriptor() ([]byte, []int) {
	return file_code_service_proto_rawDescGZIP(), []int{4}
}

func (x *PutGitleaksRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *PutGitleaksRequest) GetGitleaks() *GitleaksForUpsert {
	if x != nil {
		return x.Gitleaks
	}
	return nil
}

type PutGitleaksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gitleaks *Gitleaks `protobuf:"bytes,1,opt,name=gitleaks,proto3" json:"gitleaks,omitempty"`
}

func (x *PutGitleaksResponse) Reset() {
	*x = PutGitleaksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_code_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutGitleaksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutGitleaksResponse) ProtoMessage() {}

func (x *PutGitleaksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_code_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutGitleaksResponse.ProtoReflect.Descriptor instead.
func (*PutGitleaksResponse) Descriptor() ([]byte, []int) {
	return file_code_service_proto_rawDescGZIP(), []int{5}
}

func (x *PutGitleaksResponse) GetGitleaks() *Gitleaks {
	if x != nil {
		return x.Gitleaks
	}
	return nil
}

type DeleteGitleaksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId  uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GitleaksId uint32 `protobuf:"varint,2,opt,name=gitleaks_id,json=gitleaksId,proto3" json:"gitleaks_id,omitempty"`
}

func (x *DeleteGitleaksRequest) Reset() {
	*x = DeleteGitleaksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_code_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGitleaksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGitleaksRequest) ProtoMessage() {}

func (x *DeleteGitleaksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_code_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGitleaksRequest.ProtoReflect.Descriptor instead.
func (*DeleteGitleaksRequest) Descriptor() ([]byte, []int) {
	return file_code_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteGitleaksRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *DeleteGitleaksRequest) GetGitleaksId() uint32 {
	if x != nil {
		return x.GitleaksId
	}
	return 0
}

type InvokeScanGitleaksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId  uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GitleaksId uint32 `protobuf:"varint,2,opt,name=gitleaks_id,json=gitleaksId,proto3" json:"gitleaks_id,omitempty"`
}

func (x *InvokeScanGitleaksRequest) Reset() {
	*x = InvokeScanGitleaksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_code_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeScanGitleaksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeScanGitleaksRequest) ProtoMessage() {}

func (x *InvokeScanGitleaksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_code_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeScanGitleaksRequest.ProtoReflect.Descriptor instead.
func (*InvokeScanGitleaksRequest) Descriptor() ([]byte, []int) {
	return file_code_service_proto_rawDescGZIP(), []int{7}
}

func (x *InvokeScanGitleaksRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *InvokeScanGitleaksRequest) GetGitleaksId() uint32 {
	if x != nil {
		return x.GitleaksId
	}
	return 0
}

var File_code_service_proto protoreflect.FileDescriptor

var file_code_service_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x6f, 0x64, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x63, 0x6f,
	0x64, 0x65, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x5a, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x13, 0x63, 0x6f, 0x64, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x63, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5d, 0x0a, 0x16, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x10, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x64, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x47, 0x69, 0x74, 0x6c, 0x65, 0x61, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x2d, 0x0a, 0x13, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10,
	0x63, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x69, 0x74, 0x6c, 0x65, 0x61, 0x6b, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x67, 0x69, 0x74, 0x6c, 0x65, 0x61, 0x6b, 0x73, 0x49,
	0x64, 0x22, 0x47, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x69, 0x74, 0x6c, 0x65, 0x61, 0x6b,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x67, 0x69, 0x74,
	0x6c, 0x65, 0x61, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f,
	0x64, 0x65, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x47, 0x69, 0x74, 0x6c, 0x65, 0x61, 0x6b, 0x73,
	0x52, 0x08, 0x67, 0x69, 0x74, 0x6c, 0x65, 0x61, 0x6b, 0x73, 0x22, 0x6d, 0x0a, 0x12, 0x50, 0x75,
	0x74, 0x47, 0x69, 0x74, 0x6c, 0x65, 0x61, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x38, 0x0a, 0x08, 0x67, 0x69, 0x74, 0x6c, 0x65, 0x61, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x47, 0x69,
	0x74, 0x6c, 0x65, 0x61, 0x6b, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52,
	0x08, 0x67, 0x69, 0x74, 0x6c, 0x65, 0x61, 0x6b, 0x73, 0x22, 0x46, 0x0a, 0x13, 0x50, 0x75, 0x74,
	0x47, 0x69, 0x74, 0x6c, 0x65, 0x61, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x08, 0x67, 0x69, 0x74, 0x6c, 0x65, 0x61, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x47,
	0x69, 0x74, 0x6c, 0x65, 0x61, 0x6b, 0x73, 0x52, 0x08, 0x67, 0x69, 0x74, 0x6c, 0x65, 0x61, 0x6b,
	0x73, 0x22, 0x57, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x69, 0x74, 0x6c, 0x65,
	0x61, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x69, 0x74,
	0x6c, 0x65, 0x61, 0x6b, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x67, 0x69, 0x74, 0x6c, 0x65, 0x61, 0x6b, 0x73, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x19, 0x49, 0x6e,
	0x76, 0x6f, 0x6b, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x47, 0x69, 0x74, 0x6c, 0x65, 0x61, 0x6b, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x69, 0x74, 0x6c, 0x65, 0x61,
	0x6b, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x67, 0x69, 0x74,
	0x6c, 0x65, 0x61, 0x6b, 0x73, 0x49, 0x64, 0x32, 0xec, 0x03, 0x0a, 0x0b, 0x43, 0x6f, 0x64, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x63, 0x6f, 0x64, 0x65,
	0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x6f,
	0x64, 0x65, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f,
	0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x69, 0x74, 0x6c, 0x65, 0x61, 0x6b, 0x73, 0x12, 0x1e,
	0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47,
	0x69, 0x74, 0x6c, 0x65, 0x61, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47,
	0x69, 0x74, 0x6c, 0x65, 0x61, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4c, 0x0a, 0x0b, 0x50, 0x75, 0x74, 0x47, 0x69, 0x74, 0x6c, 0x65, 0x61, 0x6b, 0x73, 0x12, 0x1d,
	0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x50, 0x75, 0x74, 0x47, 0x69,
	0x74, 0x6c, 0x65, 0x61, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x50, 0x75, 0x74, 0x47, 0x69, 0x74,
	0x6c, 0x65, 0x61, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a,
	0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x69, 0x74, 0x6c, 0x65, 0x61, 0x6b, 0x73, 0x12,
	0x20, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x47, 0x69, 0x74, 0x6c, 0x65, 0x61, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x52, 0x0a, 0x12, 0x49, 0x6e, 0x76,
	0x6f, 0x6b, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x47, 0x69, 0x74, 0x6c, 0x65, 0x61, 0x6b, 0x73, 0x12,
	0x24, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x6f,
	0x6b, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x47, 0x69, 0x74, 0x6c, 0x65, 0x61, 0x6b, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x47, 0x0a,
	0x15, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x41, 0x6c, 0x6c, 0x47, 0x69,
	0x74, 0x6c, 0x65, 0x61, 0x6b, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x79, 0x62, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2f,
	0x6d, 0x69, 0x6d, 0x6f, 0x73, 0x61, 0x2d, 0x63, 0x6f, 0x64, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_code_service_proto_rawDescOnce sync.Once
	file_code_service_proto_rawDescData = file_code_service_proto_rawDesc
)

func file_code_service_proto_rawDescGZIP() []byte {
	file_code_service_proto_rawDescOnce.Do(func() {
		file_code_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_code_service_proto_rawDescData)
	})
	return file_code_service_proto_rawDescData
}

var file_code_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_code_service_proto_goTypes = []interface{}{
	(*ListDataSourceRequest)(nil),     // 0: code.code.ListDataSourceRequest
	(*ListDataSourceResponse)(nil),    // 1: code.code.ListDataSourceResponse
	(*ListGitleaksRequest)(nil),       // 2: code.code.ListGitleaksRequest
	(*ListGitleaksResponse)(nil),      // 3: code.code.ListGitleaksResponse
	(*PutGitleaksRequest)(nil),        // 4: code.code.PutGitleaksRequest
	(*PutGitleaksResponse)(nil),       // 5: code.code.PutGitleaksResponse
	(*DeleteGitleaksRequest)(nil),     // 6: code.code.DeleteGitleaksRequest
	(*InvokeScanGitleaksRequest)(nil), // 7: code.code.InvokeScanGitleaksRequest
	(*CodeDataSource)(nil),            // 8: code.code.CodeDataSource
	(*Gitleaks)(nil),                  // 9: code.code.Gitleaks
	(*GitleaksForUpsert)(nil),         // 10: code.code.GitleaksForUpsert
	(*empty.Empty)(nil),               // 11: google.protobuf.Empty
}
var file_code_service_proto_depIdxs = []int32{
	8,  // 0: code.code.ListDataSourceResponse.code_data_source:type_name -> code.code.CodeDataSource
	9,  // 1: code.code.ListGitleaksResponse.gitleaks:type_name -> code.code.Gitleaks
	10, // 2: code.code.PutGitleaksRequest.gitleaks:type_name -> code.code.GitleaksForUpsert
	9,  // 3: code.code.PutGitleaksResponse.gitleaks:type_name -> code.code.Gitleaks
	0,  // 4: code.code.CodeService.ListDataSource:input_type -> code.code.ListDataSourceRequest
	2,  // 5: code.code.CodeService.ListGitleaks:input_type -> code.code.ListGitleaksRequest
	4,  // 6: code.code.CodeService.PutGitleaks:input_type -> code.code.PutGitleaksRequest
	6,  // 7: code.code.CodeService.DeleteGitleaks:input_type -> code.code.DeleteGitleaksRequest
	7,  // 8: code.code.CodeService.InvokeScanGitleaks:input_type -> code.code.InvokeScanGitleaksRequest
	11, // 9: code.code.CodeService.InvokeScanAllGitleaks:input_type -> google.protobuf.Empty
	1,  // 10: code.code.CodeService.ListDataSource:output_type -> code.code.ListDataSourceResponse
	3,  // 11: code.code.CodeService.ListGitleaks:output_type -> code.code.ListGitleaksResponse
	5,  // 12: code.code.CodeService.PutGitleaks:output_type -> code.code.PutGitleaksResponse
	11, // 13: code.code.CodeService.DeleteGitleaks:output_type -> google.protobuf.Empty
	11, // 14: code.code.CodeService.InvokeScanGitleaks:output_type -> google.protobuf.Empty
	11, // 15: code.code.CodeService.InvokeScanAllGitleaks:output_type -> google.protobuf.Empty
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_code_service_proto_init() }
func file_code_service_proto_init() {
	if File_code_service_proto != nil {
		return
	}
	file_code_entity_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_code_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_code_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_code_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGitleaksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_code_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGitleaksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_code_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutGitleaksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_code_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutGitleaksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_code_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGitleaksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_code_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeScanGitleaksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_code_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_code_service_proto_goTypes,
		DependencyIndexes: file_code_service_proto_depIdxs,
		MessageInfos:      file_code_service_proto_msgTypes,
	}.Build()
	File_code_service_proto = out.File
	file_code_service_proto_rawDesc = nil
	file_code_service_proto_goTypes = nil
	file_code_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CodeServiceClient is the client API for CodeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CodeServiceClient interface {
	// Code DataSource
	ListDataSource(ctx context.Context, in *ListDataSourceRequest, opts ...grpc.CallOption) (*ListDataSourceResponse, error)
	// Gitleaks
	ListGitleaks(ctx context.Context, in *ListGitleaksRequest, opts ...grpc.CallOption) (*ListGitleaksResponse, error)
	PutGitleaks(ctx context.Context, in *PutGitleaksRequest, opts ...grpc.CallOption) (*PutGitleaksResponse, error)
	DeleteGitleaks(ctx context.Context, in *DeleteGitleaksRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Scan
	InvokeScanGitleaks(ctx context.Context, in *InvokeScanGitleaksRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	InvokeScanAllGitleaks(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
}

type codeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCodeServiceClient(cc grpc.ClientConnInterface) CodeServiceClient {
	return &codeServiceClient{cc}
}

func (c *codeServiceClient) ListDataSource(ctx context.Context, in *ListDataSourceRequest, opts ...grpc.CallOption) (*ListDataSourceResponse, error) {
	out := new(ListDataSourceResponse)
	err := c.cc.Invoke(ctx, "/code.code.CodeService/ListDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *codeServiceClient) ListGitleaks(ctx context.Context, in *ListGitleaksRequest, opts ...grpc.CallOption) (*ListGitleaksResponse, error) {
	out := new(ListGitleaksResponse)
	err := c.cc.Invoke(ctx, "/code.code.CodeService/ListGitleaks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *codeServiceClient) PutGitleaks(ctx context.Context, in *PutGitleaksRequest, opts ...grpc.CallOption) (*PutGitleaksResponse, error) {
	out := new(PutGitleaksResponse)
	err := c.cc.Invoke(ctx, "/code.code.CodeService/PutGitleaks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *codeServiceClient) DeleteGitleaks(ctx context.Context, in *DeleteGitleaksRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/code.code.CodeService/DeleteGitleaks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *codeServiceClient) InvokeScanGitleaks(ctx context.Context, in *InvokeScanGitleaksRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/code.code.CodeService/InvokeScanGitleaks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *codeServiceClient) InvokeScanAllGitleaks(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/code.code.CodeService/InvokeScanAllGitleaks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CodeServiceServer is the server API for CodeService service.
type CodeServiceServer interface {
	// Code DataSource
	ListDataSource(context.Context, *ListDataSourceRequest) (*ListDataSourceResponse, error)
	// Gitleaks
	ListGitleaks(context.Context, *ListGitleaksRequest) (*ListGitleaksResponse, error)
	PutGitleaks(context.Context, *PutGitleaksRequest) (*PutGitleaksResponse, error)
	DeleteGitleaks(context.Context, *DeleteGitleaksRequest) (*empty.Empty, error)
	// Scan
	InvokeScanGitleaks(context.Context, *InvokeScanGitleaksRequest) (*empty.Empty, error)
	InvokeScanAllGitleaks(context.Context, *empty.Empty) (*empty.Empty, error)
}

// UnimplementedCodeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCodeServiceServer struct {
}

func (*UnimplementedCodeServiceServer) ListDataSource(context.Context, *ListDataSourceRequest) (*ListDataSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDataSource not implemented")
}
func (*UnimplementedCodeServiceServer) ListGitleaks(context.Context, *ListGitleaksRequest) (*ListGitleaksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListGitleaks not implemented")
}
func (*UnimplementedCodeServiceServer) PutGitleaks(context.Context, *PutGitleaksRequest) (*PutGitleaksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutGitleaks not implemented")
}
func (*UnimplementedCodeServiceServer) DeleteGitleaks(context.Context, *DeleteGitleaksRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteGitleaks not implemented")
}
func (*UnimplementedCodeServiceServer) InvokeScanGitleaks(context.Context, *InvokeScanGitleaksRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvokeScanGitleaks not implemented")
}
func (*UnimplementedCodeServiceServer) InvokeScanAllGitleaks(context.Context, *empty.Empty) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvokeScanAllGitleaks not implemented")
}

func RegisterCodeServiceServer(s *grpc.Server, srv CodeServiceServer) {
	s.RegisterService(&_CodeService_serviceDesc, srv)
}

func _CodeService_ListDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CodeServiceServer).ListDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/code.code.CodeService/ListDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CodeServiceServer).ListDataSource(ctx, req.(*ListDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CodeService_ListGitleaks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListGitleaksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CodeServiceServer).ListGitleaks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/code.code.CodeService/ListGitleaks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CodeServiceServer).ListGitleaks(ctx, req.(*ListGitleaksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CodeService_PutGitleaks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutGitleaksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CodeServiceServer).PutGitleaks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/code.code.CodeService/PutGitleaks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CodeServiceServer).PutGitleaks(ctx, req.(*PutGitleaksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CodeService_DeleteGitleaks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteGitleaksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CodeServiceServer).DeleteGitleaks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/code.code.CodeService/DeleteGitleaks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CodeServiceServer).DeleteGitleaks(ctx, req.(*DeleteGitleaksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CodeService_InvokeScanGitleaks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InvokeScanGitleaksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CodeServiceServer).InvokeScanGitleaks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/code.code.CodeService/InvokeScanGitleaks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CodeServiceServer).InvokeScanGitleaks(ctx, req.(*InvokeScanGitleaksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CodeService_InvokeScanAllGitleaks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CodeServiceServer).InvokeScanAllGitleaks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/code.code.CodeService/InvokeScanAllGitleaks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CodeServiceServer).InvokeScanAllGitleaks(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _CodeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "code.code.CodeService",
	HandlerType: (*CodeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListDataSource",
			Handler:    _CodeService_ListDataSource_Handler,
		},
		{
			MethodName: "ListGitleaks",
			Handler:    _CodeService_ListGitleaks_Handler,
		},
		{
			MethodName: "PutGitleaks",
			Handler:    _CodeService_PutGitleaks_Handler,
		},
		{
			MethodName: "DeleteGitleaks",
			Handler:    _CodeService_DeleteGitleaks_Handler,
		},
		{
			MethodName: "InvokeScanGitleaks",
			Handler:    _CodeService_InvokeScanGitleaks_Handler,
		},
		{
			MethodName: "InvokeScanAllGitleaks",
			Handler:    _CodeService_InvokeScanAllGitleaks_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "code/service.proto",
}
